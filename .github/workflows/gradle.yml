name: Java CI with Gradle

on:
  pull_request:
    branches: [ "main" ]
    
permissions:
  contents: read
  
jobs:
  backend-ci:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Gradle caching
    - name: Gradle Caching
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # yml File
    - name: Make application.yml
      run: mkdir ./src/main/resources |
        touch ./src/main/resources/application.yml

    - name: Copy application.yml
      run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml

    # Gradle Setting & Build
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Change gradlew permissions
      run: chmod +x ./gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build

    - name: List build, libs contents
      run: ls build/libs

    # Docker
    - name: Docker Login
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    # Docker Image
    - name: Docker Build & Push
      run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/moyeobang_be .
          docker push ${{ secrets.DOCKER_USERNAME }}/moyeobang_be

  backend-cd:
    needs: backend-ci
    runs-on: ubuntu-latest

    steps:
      # EC2 
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_KEY }}
          port: 22
          script: |
            sudo docker-compose -f /home/ubuntu/compose/docker-compose.yml down
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/moyeobang_be
            sudo docker image prune
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/moyeobang_be
            sudo docker-compose -f /home/ubuntu/compose/docker-compose.yml up -d